{
  "$schema": "http://json.schemastore.org/template",
  "author": "Anthony COUDENE",
  "classifications": [ "Api", "Architecture" ],
  "name": "Vertical Slice Architecture generator",
  "identity": "acoudene.vsa.generator", // Unique name for this template
  "groupIdentity": "acoudene.vsa.generator",
  "shortName": "vsa_generator", // Short name that can be used on the cli
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "sourceName": "Feature", // Will replace this string with the value provided via -n.
  "symbols": {
    "entityContentName": {
      "type": "parameter",
      "defaultValue": "MyEntity",
      "replaces": "EntityName"
    },
    "lcFirstLetter": {
      "type": "derived",
      "valueSource": "entityContentName",
      "valueTransform": "lowerCaseFirstLetter"
    },
    "aftFirstLetter": {
      "type": "derived",
      "valueSource": "entityContentName",
      "valueTransform": "afterFirstLetter"
    },
    "entityCamelCaseContentName": {
      "type": "generated",
      "generator": "join",
      "replaces": "entityName",
      "parameters": {
        "symbols": [
          {
            "type": "ref",
            "value": "lcFirstLetter"
          },
          {
            "type": "ref",
            "value": "aftFirstLetter"
          }
        ]
      }
    },
    "entityFileName": {
      "type": "derived",
      "valueSource": "entityContentName",
      "valueTransform": "replace",
      "fileRename": "EntityName"
    },
    "featureContentName": {
      "type": "derived",
      "valueSource": "name",
      "valueTransform": "replace",
      "replaces": "Feature"
    },
    "featureSolutionName": {
      "type": "derived",
      "valueSource": "name",
      "valueTransform": "replace",
      "fileRename": "VerticalSliceArchitecture"
    }
  },
  "forms": {
    "lowerCaseFirstLetter": {
      "identifier": "chain",
      "steps": [
        "firstLetter",
        "lowerCase"
      ]
    },
    "firstLetter": {
      "identifier": "replace",
      "pattern": "^(.)(.*)",
      "replacement": "$1"
    },
    "afterFirstLetter": {
      "identifier": "replace",
      "pattern": "^(.)(.*)",
      "replacement": "$2"
    },
    "lowerCase": {
      "identifier": "lowerCase"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "exclude": [ ".vs/**" ]
        }
      ]
    }
  ],
  "preferNameDirectory": "true"
}
